// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.draka.hardi.web;

import com.draka.hardi.domain.PolicyCustomerAud;
import com.draka.hardi.domain.PolicyCustomerAudPK;
import com.draka.hardi.web.PolicyCustomerAudController;
import org.joda.time.format.DateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.core.convert.ConversionService;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect PolicyCustomerAudController_Roo_Controller {
    
    private ConversionService PolicyCustomerAudController.conversionService;
    
    @Autowired
    public PolicyCustomerAudController.new(ConversionService conversionService) {
        super();
        this.conversionService = conversionService;
    }

    @RequestMapping(value = "/{id}", produces = "text/html")
    public String PolicyCustomerAudController.show(@PathVariable("id") PolicyCustomerAudPK id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("policycustomeraud", PolicyCustomerAud.findPolicyCustomerAud(id));
        uiModel.addAttribute("itemId", conversionService.convert(id, String.class));
        return "policycustomerauds/show";
    }
    
    /* @RequestMapping(produces = "text/html")
    public String PolicyCustomerAudController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("policycustomerauds", PolicyCustomerAud.findPolicyCustomerAudEntries(firstResult, sizeNo, sortFieldName, sortOrder));
            float nrOfPages = (float) PolicyCustomerAud.countPolicyCustomerAuds() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("policycustomerauds", PolicyCustomerAud.findAllPolicyCustomerAuds(sortFieldName, sortOrder));
        }
        addDateTimeFormatPatterns(uiModel);
        return "policycustomerauds/list";
    } */
    
    void PolicyCustomerAudController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("policyCustomerAud_enddate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("policyCustomerAud_startdate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
}
